name: CI

on:
  pull_request:
  push:
    branches:
      - 'staging'
      - 'trying'
      - 'master'

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Cache ~/.cargo/bin directory
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ubuntu-rust-${{ env.RUST_TOOLCHAIN }}-cargo-bin-directory-v1

      - name: Install tomlfmt
        run: which cargo-tomlfmt || cargo install cargo-tomlfmt

      - name: Check Cargo.toml formatting
        run: |
          cargo tomlfmt -d -p Cargo.toml
          cargo tomlfmt -d -p thor/Cargo.toml

      - name: Check code formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  build_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - name: Cache target directory
        uses: actions/cache@v1
        with:
          path: target
          key: rust-${{ matrix.rust_toolchain }}-target-directory-${{ hashFiles('Cargo.lock') }}-v1

      - name: Cache ~/.cargo/registry directory
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: rust-${{ matrix.rust_toolchain }}-cargo-registry-directory-${{ hashFiles('Cargo.lock') }}-v1

      - name: Cargo check release code with default features
        run: cargo check --workspace

      - name: Cargo check all features
        run: cargo check --workspace --all-targets --all-features

      - name: Cargo test
        run: cargo test --workspace --all-features
